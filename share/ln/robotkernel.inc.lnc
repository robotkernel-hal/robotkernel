requires_version 0.2.43
# this include file can be customized with the following defines:
#   rk_name
#     (optional) process name
#     defaults to robotkernel_gui
#   rk_node
#     (optional) node name
#     defaults to localhost
#   rk_arguments
#     (optional) arguments
#       --config path/to/config.rkc
#       --verbose
#       --quiet
#   rk_base
#     (optional) path to robotkernel-base-directory
#     e.g. /volume/software/common/packages/robotkernel/2.1.6
#     or to a local reltool path,
#     or to a local install like: /home/schm_fl/workspace/robotkernel/build/sled11-x86-gcc4.x
#     defaults to rmpm structure
#   rk_library_path
#     (optional) add custom library search paths
#   libsercos
#     (optional) add sercos library
#   rk_start_as
#     (optional) su, if possible (e.g. root)
#   rk_set_resource_limits
#     (optional) set resource limits
#   rk_change_directory
#     (optional) change directory
#   rk_flags
#     (optional)
#   rk_max_output_frequency
#     (optional)
#   rk_output_logfile
#     (optional) write process output to this logfile
#   rk_debug
#     (optional) set to true to use robotkernel binary with debugging information
#   rk_use_template
#     (optional) use template to derive rk process from

defines
rk_base: %(ifndef "rk_base", "%(dirname %(dirname %(CURDIR)))")
rk_base_type: %(ifexists "%(rk_base)/bin/robotkernel", "local_install", "rmpm_release")
rk_this_debug: %(ifndef "rk_debug" "false")
rk_binary_bn: %(ifeq "%(rk_this_debug)", "true", "robotkernel_debug", "robotkernel")
rk_binary: %(ifeq "%(rk_base_type)", "local_install", "%(rk_base)/bin/%(rk_binary_bn)", "%(rk_base)/bin/$(ARCH)/%(rk_binary_bn)")
rk_libdir: %(ifeq "%(rk_base_type)", "local_install", "%(rk_base)/lib", "%(rk_base)/lib/$(ARCH)")
rk_modules: %(ifndef "rk_modules", "")
rk_interfaces: %(ifndef "rk_interfaces", "") 
rk_ld_so_conf: %(ifndef "rk_ld_so_conf", "")
rk_term_timeout: %(ifndef "rk_term_timeout", "4")
add_message_definition_dir: %(rk_base)/share/ln/message_definitions

process %(ifndef "rk_name", "robotkernel")
append environment ROBOTKERNEL_MODULE_PATH: %(rk_modules)
append environment ROBOTKERNEL_INTERFACE_PATH: %(rk_interfaces)
append environment LD_LIBRARY_PATH: %(rk_libpath)
append environment LD_SO_CONF: %(rk_ld_so_conf)
command: %(rk_binary) %(ifndef "rk_arguments", "")
node: %(ifndef "rk_node", "localhost")
ready_regex: up and running
ifdef rk_flags: flags: %(rk_flags)
ifdef rk_term_timeout: term_timeout: %(rk_term_timeout)
ifdef rk_max_output_frequency: max_output_frequency: %(rk_max_output_frequency)
ifdef rk_output_logfile: output_logfile: %(rk_output_logfile)
ifdef rk_output_encoding: output_encoding: %(rk_output_encoding)
ifdef rk_change_directory: change_directory: %(rk_change_directory)
ifdef rk_stack_size: stack_size: %(rk_stack_size)
ifdef rk_start_as: change_user_to: %(rk_start_as)
ifdef rk_depends_on: depends_on: %(rk_depends_on)
ifdef rk_start_on_ready: start_on_ready: %(rk_start_on_ready)
ifdef rk_set_resource_limits: set_resource_limits: %(rk_set_resource_limits)
ifdef rk_derive_from: derive_from: %(rk_derive_from)
ifdef rk_use_template: use_template: %(rk_use_template)
