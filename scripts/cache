#!/usr/bin/python

import os
import sys
import subprocess

log_fp = None
def log(msg):
    return
    global log_fp
    if log_fp is None:
        log_fp = file("/tmp/cmd_cache.log", "a+")
    log_fp.write("%s\n" % msg.rstrip("\n"))
    log_fp.flush()
    
log("args: %r" % (sys.argv))

def shellquote(s):
    if "'" in s:
        return "'%s'" % s.replace("'", "'\\''")
    if " " in s:
        return "'%s'" % s
    return s

cache_name = sys.argv[1]
log("cache_name: %r" % cache_name)

cmdline = " ".join(map(shellquote, sys.argv[2:]))
log("cmdline: %r" % cmdline)

if os.path.isfile(cache_name):    
    try:
        last_cmdline, last_output, last_retval = eval(file(cache_name, "rb").read())
        log("last_cmdline: %r" % last_cmdline)
    except:
        print sys.exc_value
        last_cmdline = None
    if last_cmdline == cmdline:
        log("last_cmdline matches, sending last output: %r" % last_output)
        sys.stdout.write(last_output)
        sys.exit(last_retval)

p = subprocess.Popen(cmdline, shell=True, stdout=subprocess.PIPE)
out, err = p.communicate()

log("retval: %d, output: %r" % (p.returncode, out))
sys.stdout.write(out)

try:
    dn = os.path.dirname(cache_name)
    if not os.path.isdir(dn):
        os.makedirs(dn)
    fp = file(cache_name, "wb")
    fp.write("%r" % ((cmdline, out, p.returncode), ))
    fp.close()
except:
    sys.stderr.write("failed to write cache file %r: %s\n" % (cache_name, sys.exc_value))
sys.exit(p.returncode)
